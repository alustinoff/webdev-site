section.section.blog-section
	.container.blog-container
		aside.blog-navigation
			ul.articles__list
				li.articles__item.articles__item_active
					a.articles__link(href="#") Заметки FlexBox Часть 1
				li.articles__item
					a.articles__link(href="#") Заметки FlexBox Часть 2
				li.articles__item
					a.articles__link(href="#") Заметки FlexBox Часть 3
		main.blog__content
			ul.blog__list
				li.blog_item
					.article__title Заметки FlexBox Часть 1
					.article__date 25 декабря 2017
					.article__content
						p.article__text Для того чтобы начать использовать flexbox нужно задать родительскому элементу  display: flex;<br> Тогда в терминологии flexbox этот родительский элемент будет называться flex container. Элементы внутри контейнера - флекс блоки или флекс элементы.

						p.article__text При использовании flex перестают работать следующие свойства:<br>- columns,<br> - float,<br> - clear,<br> - vertical-align.


						p.article__text По умолчанию поперечная ось растягивается на всю высоту контейнера, и все flex элементы растягиваются на всю высоту поперечной оси и прижимаются к левому краю главной. В отличие от обычной блочной вёрстки при использовании flex, у  элементов появляется коллапс марджинов, то есть марджины складываются.

						p.article__text Если задать блоку margin: auto; то он выровнится по вертикали и горизонтали, то есть окажется в центре контейнера.
						p.article__text В чем же главная особенность и новизна технологии flexbox?

						p.article__text У контейнера есть две оси, главная и поперечная. Поперечная ось всегда перпендикулярна главной. По умолчаню главная идет слева на право, а поперечная сверху вниз.

						p.article__text У flexbox есть 2 типа свойств:<br> 1) применяются только к flex контейнеру<br> 2) применяются к элементам
				li.blog_item
					.article__title Заметки FlexBox Часть 2
					.article__date 25 декабря 2017
					.article__content
						p.article__text Рассмотрим свойства для flex контейнера.

						p.article__text flex-direction:      //отвечает за направление главной оси<br><br> flex-direction: row; 	//по умолчанию - слева - направо<br> flex-direction: row-reverse;  //главная ось будет идти по горизонтали справа - налево<br> flex-direction: column;  //главная ось будет идти по вертикали сверху - вниз<br> flex-direction: column-reverse; // главная ось будет идти по вертикали снизу - вверх
						p.article__text justify-content:      //отвечает за то, как будут распределяться блоки вдоль главной оси(прижиматься и т.д.)
							<br><br> justify-content: flex-start;   //по-умолчанию (прижимаются к началу главной оси)<br> justify-content: flex-end;  //блоки прижимаются к концу главной оси (при этом их порядок не изменяется)<br> justify-content: space-between;  //блоки равномерно распределяются на всю ширину главной оси, от ее начала до ее конца<br> justify-content: space-around;  //блоки равномерно распределяются на всю ширину главной оси, от ее начала до ее конца, НО вначале и конце добавляется половина отступа, который есть между блоками<br> justify-content: center;     //блоки размещаются по горизонтальному центру контейнера
